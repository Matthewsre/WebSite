//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OCC.UI.Webhost.CodeCampService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OCC.UI.Webhost.CodeCampService.Speaker))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TShirtSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwitterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bio {
            get {
                return this.BioField;
            }
            set {
                if ((object.ReferenceEquals(this.BioField, value) != true)) {
                    this.BioField = value;
                    this.RaisePropertyChanged("Bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Blog {
            get {
                return this.BlogField;
            }
            set {
                if ((object.ReferenceEquals(this.BlogField, value) != true)) {
                    this.BlogField = value;
                    this.RaisePropertyChanged("Blog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TShirtSize {
            get {
                return this.TShirtSizeField;
            }
            set {
                if ((this.TShirtSizeField.Equals(value) != true)) {
                    this.TShirtSizeField = value;
                    this.RaisePropertyChanged("TShirtSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Twitter {
            get {
                return this.TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterField, value) != true)) {
                    this.TwitterField = value;
                    this.RaisePropertyChanged("Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Speaker", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Speaker : OCC.UI.Webhost.CodeCampService.Person {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Session[] SessionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Session[] Sessions {
            get {
                return this.SessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionsField, value) != true)) {
                    this.SessionsField = value;
                    this.RaisePropertyChanged("Sessions");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpeakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeakerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TagIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeslotIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TrackIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speaker {
            get {
                return this.SpeakerField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakerField, value) != true)) {
                    this.SpeakerField = value;
                    this.RaisePropertyChanged("Speaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpeakerID {
            get {
                return this.SpeakerIDField;
            }
            set {
                if ((this.SpeakerIDField.Equals(value) != true)) {
                    this.SpeakerIDField = value;
                    this.RaisePropertyChanged("SpeakerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TagID {
            get {
                return this.TagIDField;
            }
            set {
                if ((this.TagIDField.Equals(value) != true)) {
                    this.TagIDField = value;
                    this.RaisePropertyChanged("TagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeslotID {
            get {
                return this.TimeslotIDField;
            }
            set {
                if ((this.TimeslotIDField.Equals(value) != true)) {
                    this.TimeslotIDField = value;
                    this.RaisePropertyChanged("TimeslotID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Track {
            get {
                return this.TrackField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackField, value) != true)) {
                    this.TrackField = value;
                    this.RaisePropertyChanged("Track");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TrackID {
            get {
                return this.TrackIDField;
            }
            set {
                if ((this.TrackIDField.Equals(value) != true)) {
                    this.TrackIDField = value;
                    this.RaisePropertyChanged("TrackID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Announcement[] AnnouncementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Person[] AttendeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAttendeeRegistrationOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSpeakerRegistrationOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSponsorRegistrationOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVolunteerRegistrationOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Sponsor[] SponsorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Track[] TracksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TwitterHashTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Announcement[] Announcements {
            get {
                return this.AnnouncementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AnnouncementsField, value) != true)) {
                    this.AnnouncementsField = value;
                    this.RaisePropertyChanged("Announcements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Person[] Attendees {
            get {
                return this.AttendeesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendeesField, value) != true)) {
                    this.AttendeesField = value;
                    this.RaisePropertyChanged("Attendees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAttendeeRegistrationOpen {
            get {
                return this.IsAttendeeRegistrationOpenField;
            }
            set {
                if ((this.IsAttendeeRegistrationOpenField.Equals(value) != true)) {
                    this.IsAttendeeRegistrationOpenField = value;
                    this.RaisePropertyChanged("IsAttendeeRegistrationOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpeakerRegistrationOpen {
            get {
                return this.IsSpeakerRegistrationOpenField;
            }
            set {
                if ((this.IsSpeakerRegistrationOpenField.Equals(value) != true)) {
                    this.IsSpeakerRegistrationOpenField = value;
                    this.RaisePropertyChanged("IsSpeakerRegistrationOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSponsorRegistrationOpen {
            get {
                return this.IsSponsorRegistrationOpenField;
            }
            set {
                if ((this.IsSponsorRegistrationOpenField.Equals(value) != true)) {
                    this.IsSponsorRegistrationOpenField = value;
                    this.RaisePropertyChanged("IsSponsorRegistrationOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVolunteerRegistrationOpen {
            get {
                return this.IsVolunteerRegistrationOpenField;
            }
            set {
                if ((this.IsVolunteerRegistrationOpenField.Equals(value) != true)) {
                    this.IsVolunteerRegistrationOpenField = value;
                    this.RaisePropertyChanged("IsVolunteerRegistrationOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Sponsor[] Sponsors {
            get {
                return this.SponsorsField;
            }
            set {
                if ((object.ReferenceEquals(this.SponsorsField, value) != true)) {
                    this.SponsorsField = value;
                    this.RaisePropertyChanged("Sponsors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Track[] Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TwitterHashTag {
            get {
                return this.TwitterHashTagField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterHashTagField, value) != true)) {
                    this.TwitterHashTagField = value;
                    this.RaisePropertyChanged("TwitterHashTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Announcement", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Announcement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishDate {
            get {
                return this.PublishDateField;
            }
            set {
                if ((this.PublishDateField.Equals(value) != true)) {
                    this.PublishDateField = value;
                    this.RaisePropertyChanged("PublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sponsor", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Sponsor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SponsorshipLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SponsorshipLevel {
            get {
                return this.SponsorshipLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.SponsorshipLevelField, value) != true)) {
                    this.SponsorshipLevelField = value;
                    this.RaisePropertyChanged("SponsorshipLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebsiteUrl {
            get {
                return this.WebsiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteUrlField, value) != true)) {
                    this.WebsiteUrlField = value;
                    this.RaisePropertyChanged("WebsiteUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Track", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Track : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Session[] SessionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Session[] Sessions {
            get {
                return this.SessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionsField, value) != true)) {
                    this.SessionsField = value;
                    this.RaisePropertyChanged("Sessions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Timeslot", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Timeslot : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rate", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Rate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateFoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateSigninField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateSwagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.RateSession[] RatedSessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReferralSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateFood {
            get {
                return this.RateFoodField;
            }
            set {
                if ((this.RateFoodField.Equals(value) != true)) {
                    this.RateFoodField = value;
                    this.RaisePropertyChanged("RateFood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateSignin {
            get {
                return this.RateSigninField;
            }
            set {
                if ((this.RateSigninField.Equals(value) != true)) {
                    this.RateSigninField = value;
                    this.RaisePropertyChanged("RateSignin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateSwag {
            get {
                return this.RateSwagField;
            }
            set {
                if ((this.RateSwagField.Equals(value) != true)) {
                    this.RateSwagField = value;
                    this.RaisePropertyChanged("RateSwag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.RateSession[] RatedSessions {
            get {
                return this.RatedSessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatedSessionsField, value) != true)) {
                    this.RatedSessionsField = value;
                    this.RaisePropertyChanged("RatedSessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReferralSource {
            get {
                return this.ReferralSourceField;
            }
            set {
                if ((this.ReferralSourceField.Equals(value) != true)) {
                    this.ReferralSourceField = value;
                    this.RaisePropertyChanged("ReferralSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateSession", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class RateSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSlotIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((this.SessionIDField.Equals(value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSlotID {
            get {
                return this.TimeSlotIDField;
            }
            set {
                if ((this.TimeSlotIDField.Equals(value) != true)) {
                    this.TimeSlotIDField = value;
                    this.RaisePropertyChanged("TimeSlotID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionsCount {
            get {
                return this.SessionsCountField;
            }
            set {
                if ((this.SessionsCountField.Equals(value) != true)) {
                    this.SessionsCountField = value;
                    this.RaisePropertyChanged("SessionsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagName {
            get {
                return this.TagNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagNameField, value) != true)) {
                    this.TagNameField = value;
                    this.RaisePropertyChanged("TagName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Person[] AssigneesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private OCC.UI.Webhost.CodeCampService.Event EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Person[] Assignees {
            get {
                return this.AssigneesField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneesField, value) != true)) {
                    this.AssigneesField = value;
                    this.RaisePropertyChanged("Assignees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OCC.UI.Webhost.CodeCampService.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionAttendee", Namespace="http://schemas.datacontract.org/2004/07/OCC.Service.Webhost.Services")]
    [System.SerializableAttribute()]
    public partial class SessionAttendee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SessionRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpeakerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SpeakerRatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionName {
            get {
                return this.SessionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionNameField, value) != true)) {
                    this.SessionNameField = value;
                    this.RaisePropertyChanged("SessionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SessionRating {
            get {
                return this.SessionRatingField;
            }
            set {
                if ((this.SessionRatingField.Equals(value) != true)) {
                    this.SessionRatingField = value;
                    this.RaisePropertyChanged("SessionRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpeakerName {
            get {
                return this.SpeakerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeakerNameField, value) != true)) {
                    this.SpeakerNameField = value;
                    this.RaisePropertyChanged("SpeakerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SpeakerRating {
            get {
                return this.SpeakerRatingField;
            }
            set {
                if ((this.SpeakerRatingField.Equals(value) != true)) {
                    this.SpeakerRatingField = value;
                    this.RaisePropertyChanged("SpeakerRating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://onetug.org/2012/CodeCampService", ConfigurationName="CodeCampService.ICodeCampService")]
    public interface ICodeCampService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/RegisterPerson", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/RegisterPersonResponse")]
        int RegisterPerson(OCC.UI.Webhost.CodeCampService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/Login", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/LoginResponse")]
        OCC.UI.Webhost.CodeCampService.Person Login(OCC.UI.Webhost.CodeCampService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/ChangePassword", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/ChangePasswordResponse")]
        void ChangePassword(int personId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/ResetPassword", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/ResetPasswordResponse")]
        void ResetPassword(string emailAddress, string temporaryPassword, string temporaryPasswordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdatePerson", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdatePersonResponse")]
        void UpdatePerson(OCC.UI.Webhost.CodeCampService.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeletePerson", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeletePersonResponse")]
        void DeletePerson(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/FindPersonByEmail", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/FindPersonByEmailResponse" +
            "")]
        OCC.UI.Webhost.CodeCampService.Person FindPersonByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAdministrators", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAdministratorsResponse" +
            "")]
        OCC.UI.Webhost.CodeCampService.Person[] GetAdministrators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/AddAdministrator", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/AddAdministratorResponse")]
        void AddAdministrator(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/RemoveAdministrator", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/RemoveAdministratorRespon" +
            "se")]
        void RemoveAdministrator(int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAllAttendees", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAllAttendeesResponse")]
        OCC.UI.Webhost.CodeCampService.Person[] GetAllAttendees(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEvents", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventsResponse")]
        OCC.UI.Webhost.CodeCampService.Event[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventsByDate", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventsByDateResponse")]
        OCC.UI.Webhost.CodeCampService.Event[] GetEventsByDate(System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateEventResponse")]
        void CreateEvent(OCC.UI.Webhost.CodeCampService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventResponse")]
        OCC.UI.Webhost.CodeCampService.Event GetEvent(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateEventResponse")]
        void UpdateEvent(OCC.UI.Webhost.CodeCampService.Event _event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetDefaultEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetDefaultEventResponse")]
        OCC.UI.Webhost.CodeCampService.Event GetDefaultEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSponsors", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSponsorsResponse")]
        OCC.UI.Webhost.CodeCampService.Sponsor[] GetSponsors(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSponsor", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSponsorResponse")]
        OCC.UI.Webhost.CodeCampService.Sponsor GetSponsor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateSponsor", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateSponsorResponse")]
        void CreateSponsor(OCC.UI.Webhost.CodeCampService.Sponsor sponsor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateSponsor", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateSponsorResponse")]
        void UpdateSponsor(OCC.UI.Webhost.CodeCampService.Sponsor sponsor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteSponsor", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteSponsorResponse")]
        void DeleteSponsor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAnnouncements", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAnnouncementsResponse")]
        OCC.UI.Webhost.CodeCampService.Announcement[] GetAnnouncements(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetCurrentAnnouncements", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetCurrentAnnouncementsRe" +
            "sponse")]
        OCC.UI.Webhost.CodeCampService.Announcement[] GetCurrentAnnouncements(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAnnouncement", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAnnouncementResponse")]
        OCC.UI.Webhost.CodeCampService.Announcement GetAnnouncement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateAnnouncement", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateAnnouncementRespons" +
            "e")]
        void CreateAnnouncement(OCC.UI.Webhost.CodeCampService.Announcement sponsor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateAnnouncement", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateAnnouncementRespons" +
            "e")]
        void UpdateAnnouncement(OCC.UI.Webhost.CodeCampService.Announcement sponsor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteAnnouncement", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteAnnouncementRespons" +
            "e")]
        void DeleteAnnouncement(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTracks", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTracksResponse")]
        OCC.UI.Webhost.CodeCampService.Track[] GetTracks(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTrack", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTrackResponse")]
        OCC.UI.Webhost.CodeCampService.Track GetTrack(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateTrack", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateTrackResponse")]
        void CreateTrack(OCC.UI.Webhost.CodeCampService.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTrack", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTrackResponse")]
        void UpdateTrack(OCC.UI.Webhost.CodeCampService.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTrack", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTrackResponse")]
        void DeleteTrack(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTimeslots", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTimeslotsResponse")]
        OCC.UI.Webhost.CodeCampService.Timeslot[] GetTimeslots(int idEvent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTimeslot", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTimeslotResponse")]
        OCC.UI.Webhost.CodeCampService.Timeslot GetTimeslot(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateTimeslot", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateTimeslotResponse")]
        void CreateTimeslot(OCC.UI.Webhost.CodeCampService.Timeslot Timeslot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTimeslot", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTimeslotResponse")]
        void UpdateTimeslot(OCC.UI.Webhost.CodeCampService.Timeslot Timeslot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTimeslot", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTimeslotResponse")]
        void DeleteTimeslot(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/HasSubmittedRating", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/HasSubmittedRatingRespons" +
            "e")]
        bool HasSubmittedRating(int personid, int eventid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateRateSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateRateSessionResponse" +
            "")]
        void CreateRateSession(OCC.UI.Webhost.CodeCampService.Rate rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTagsByEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTagsByEventResponse")]
        OCC.UI.Webhost.CodeCampService.Tag[] GetTagsByEvent(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSessions", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSessionsResponse")]
        OCC.UI.Webhost.CodeCampService.Session[] GetSessions(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetApprovedSessions", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetApprovedSessionsRespon" +
            "se")]
        OCC.UI.Webhost.CodeCampService.Session[] GetApprovedSessions(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSessionResponse")]
        OCC.UI.Webhost.CodeCampService.Session GetSession(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakerSessions", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakerSessionsRespons" +
            "e")]
        OCC.UI.Webhost.CodeCampService.Session[] GetSpeakerSessions(int eventId, int speakerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/CreateSessionResponse")]
        void CreateSession(OCC.UI.Webhost.CodeCampService.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateSessionResponse")]
        void UpdateSession(OCC.UI.Webhost.CodeCampService.Session session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteSessionResponse")]
        void DeleteSession(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakers", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakersResponse")]
        OCC.UI.Webhost.CodeCampService.Speaker[] GetSpeakers(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeaker", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakerResponse")]
        OCC.UI.Webhost.CodeCampService.Speaker GetSpeaker(int eventId, int speakerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTaskAssignees", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTaskAssigneesResponse")]
        OCC.UI.Webhost.CodeCampService.Person[] GetTaskAssignees(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAllCurrentEventTasks", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAllCurrentEventTasksRe" +
            "sponse")]
        OCC.UI.Webhost.CodeCampService.Task[] GetAllCurrentEventTasks(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/AssignTaskToPerson", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/AssignTaskToPersonRespons" +
            "e")]
        void AssignTaskToPerson(OCC.UI.Webhost.CodeCampService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/RemoveTaskFromPerson", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/RemoveTaskFromPersonRespo" +
            "nse")]
        void RemoveTaskFromPerson(OCC.UI.Webhost.CodeCampService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTaskById", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTaskByIdResponse")]
        OCC.UI.Webhost.CodeCampService.Task GetTaskById(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/AddTaskToEvent", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/AddTaskToEventResponse")]
        void AddTaskToEvent(OCC.UI.Webhost.CodeCampService.Task newTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DisableTask", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DisableTaskResponse")]
        void DisableTask(int existingTaskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTask", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/UpdateTaskResponse")]
        void UpdateTask(OCC.UI.Webhost.CodeCampService.Task existingTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventAttendee", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetEventAttendeeResponse")]
        string GetEventAttendee(int eventId, int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/Rsvp", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/RsvpResponse")]
        void Rsvp(int eventId, int personId, [System.ServiceModel.MessageParameterAttribute(Name="rsvp")] string rsvp1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/Schedule", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/ScheduleResponse")]
        void Schedule(int sessionId, int trackId, int timeslotId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAgenda", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAgendaResponse")]
        OCC.UI.Webhost.CodeCampService.Track[] GetAgenda(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetMyAgenda", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetMyAgendaResponse")]
        OCC.UI.Webhost.CodeCampService.Session[] GetMyAgenda(int eventId, int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/RateSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/RateSessionResponse")]
        void RateSession(OCC.UI.Webhost.CodeCampService.SessionAttendee s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAttendedSessions", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAttendedSessionsRespon" +
            "se")]
        OCC.UI.Webhost.CodeCampService.SessionAttendee[] GetAttendedSessions(int eventId, int personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/AttendSession", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/AttendSessionResponse")]
        void AttendSession(int personId, int sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTracksCount", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTracksCountResponse")]
        int GetTracksCount(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSessionsCount", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSessionsCountResponse")]
        int GetSessionsCount(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakersCount", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetSpeakersCountResponse")]
        int GetSpeakersCount(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAttendeesCount", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetAttendeesCountResponse" +
            "")]
        int GetAttendeesCount(int eventId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTags", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetTagsResponse")]
        OCC.UI.Webhost.CodeCampService.Tag[] GetTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/AddTag", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/AddTagResponse")]
        void AddTag(OCC.UI.Webhost.CodeCampService.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTag", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/DeleteTagResponse")]
        System.Tuple<bool, string> DeleteTag(int tagId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/EditTag", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/EditTagResponse")]
        void EditTag(OCC.UI.Webhost.CodeCampService.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://onetug.org/2012/CodeCampService/ICodeCampService/GetValueForKey", ReplyAction="http://onetug.org/2012/CodeCampService/ICodeCampService/GetValueForKeyResponse")]
        string GetValueForKey(string key);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICodeCampServiceChannel : OCC.UI.Webhost.CodeCampService.ICodeCampService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CodeCampServiceClient : System.ServiceModel.ClientBase<OCC.UI.Webhost.CodeCampService.ICodeCampService>, OCC.UI.Webhost.CodeCampService.ICodeCampService {
        
        public CodeCampServiceClient() {
        }
        
        public CodeCampServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CodeCampServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeCampServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CodeCampServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int RegisterPerson(OCC.UI.Webhost.CodeCampService.Person person) {
            return base.Channel.RegisterPerson(person);
        }
        
        public OCC.UI.Webhost.CodeCampService.Person Login(OCC.UI.Webhost.CodeCampService.Person person) {
            return base.Channel.Login(person);
        }
        
        public void ChangePassword(int personId, string oldPassword, string newPassword) {
            base.Channel.ChangePassword(personId, oldPassword, newPassword);
        }
        
        public void ResetPassword(string emailAddress, string temporaryPassword, string temporaryPasswordHash) {
            base.Channel.ResetPassword(emailAddress, temporaryPassword, temporaryPasswordHash);
        }
        
        public void UpdatePerson(OCC.UI.Webhost.CodeCampService.Person person) {
            base.Channel.UpdatePerson(person);
        }
        
        public void DeletePerson(int personId) {
            base.Channel.DeletePerson(personId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Person FindPersonByEmail(string email) {
            return base.Channel.FindPersonByEmail(email);
        }
        
        public OCC.UI.Webhost.CodeCampService.Person[] GetAdministrators() {
            return base.Channel.GetAdministrators();
        }
        
        public void AddAdministrator(int personId) {
            base.Channel.AddAdministrator(personId);
        }
        
        public void RemoveAdministrator(int personId) {
            base.Channel.RemoveAdministrator(personId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Person[] GetAllAttendees(int eventId) {
            return base.Channel.GetAllAttendees(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Event[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public OCC.UI.Webhost.CodeCampService.Event[] GetEventsByDate(System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetEventsByDate(fromDate, toDate);
        }
        
        public void CreateEvent(OCC.UI.Webhost.CodeCampService.Event _event) {
            base.Channel.CreateEvent(_event);
        }
        
        public OCC.UI.Webhost.CodeCampService.Event GetEvent(int idEvent) {
            return base.Channel.GetEvent(idEvent);
        }
        
        public void UpdateEvent(OCC.UI.Webhost.CodeCampService.Event _event) {
            base.Channel.UpdateEvent(_event);
        }
        
        public OCC.UI.Webhost.CodeCampService.Event GetDefaultEvent() {
            return base.Channel.GetDefaultEvent();
        }
        
        public OCC.UI.Webhost.CodeCampService.Sponsor[] GetSponsors(int idEvent) {
            return base.Channel.GetSponsors(idEvent);
        }
        
        public OCC.UI.Webhost.CodeCampService.Sponsor GetSponsor(int id) {
            return base.Channel.GetSponsor(id);
        }
        
        public void CreateSponsor(OCC.UI.Webhost.CodeCampService.Sponsor sponsor) {
            base.Channel.CreateSponsor(sponsor);
        }
        
        public void UpdateSponsor(OCC.UI.Webhost.CodeCampService.Sponsor sponsor) {
            base.Channel.UpdateSponsor(sponsor);
        }
        
        public void DeleteSponsor(int id) {
            base.Channel.DeleteSponsor(id);
        }
        
        public OCC.UI.Webhost.CodeCampService.Announcement[] GetAnnouncements(int idEvent) {
            return base.Channel.GetAnnouncements(idEvent);
        }
        
        public OCC.UI.Webhost.CodeCampService.Announcement[] GetCurrentAnnouncements(int idEvent) {
            return base.Channel.GetCurrentAnnouncements(idEvent);
        }
        
        public OCC.UI.Webhost.CodeCampService.Announcement GetAnnouncement(int id) {
            return base.Channel.GetAnnouncement(id);
        }
        
        public void CreateAnnouncement(OCC.UI.Webhost.CodeCampService.Announcement sponsor) {
            base.Channel.CreateAnnouncement(sponsor);
        }
        
        public void UpdateAnnouncement(OCC.UI.Webhost.CodeCampService.Announcement sponsor) {
            base.Channel.UpdateAnnouncement(sponsor);
        }
        
        public void DeleteAnnouncement(int id) {
            base.Channel.DeleteAnnouncement(id);
        }
        
        public OCC.UI.Webhost.CodeCampService.Track[] GetTracks(int idEvent) {
            return base.Channel.GetTracks(idEvent);
        }
        
        public OCC.UI.Webhost.CodeCampService.Track GetTrack(int id) {
            return base.Channel.GetTrack(id);
        }
        
        public void CreateTrack(OCC.UI.Webhost.CodeCampService.Track track) {
            base.Channel.CreateTrack(track);
        }
        
        public void UpdateTrack(OCC.UI.Webhost.CodeCampService.Track track) {
            base.Channel.UpdateTrack(track);
        }
        
        public void DeleteTrack(int id) {
            base.Channel.DeleteTrack(id);
        }
        
        public OCC.UI.Webhost.CodeCampService.Timeslot[] GetTimeslots(int idEvent) {
            return base.Channel.GetTimeslots(idEvent);
        }
        
        public OCC.UI.Webhost.CodeCampService.Timeslot GetTimeslot(int id) {
            return base.Channel.GetTimeslot(id);
        }
        
        public void CreateTimeslot(OCC.UI.Webhost.CodeCampService.Timeslot Timeslot) {
            base.Channel.CreateTimeslot(Timeslot);
        }
        
        public void UpdateTimeslot(OCC.UI.Webhost.CodeCampService.Timeslot Timeslot) {
            base.Channel.UpdateTimeslot(Timeslot);
        }
        
        public void DeleteTimeslot(int id) {
            base.Channel.DeleteTimeslot(id);
        }
        
        public bool HasSubmittedRating(int personid, int eventid) {
            return base.Channel.HasSubmittedRating(personid, eventid);
        }
        
        public void CreateRateSession(OCC.UI.Webhost.CodeCampService.Rate rating) {
            base.Channel.CreateRateSession(rating);
        }
        
        public OCC.UI.Webhost.CodeCampService.Tag[] GetTagsByEvent(int eventId) {
            return base.Channel.GetTagsByEvent(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Session[] GetSessions(int eventId) {
            return base.Channel.GetSessions(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Session[] GetApprovedSessions(int eventId) {
            return base.Channel.GetApprovedSessions(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Session GetSession(int id) {
            return base.Channel.GetSession(id);
        }
        
        public OCC.UI.Webhost.CodeCampService.Session[] GetSpeakerSessions(int eventId, int speakerId) {
            return base.Channel.GetSpeakerSessions(eventId, speakerId);
        }
        
        public void CreateSession(OCC.UI.Webhost.CodeCampService.Session session) {
            base.Channel.CreateSession(session);
        }
        
        public void UpdateSession(OCC.UI.Webhost.CodeCampService.Session session) {
            base.Channel.UpdateSession(session);
        }
        
        public void DeleteSession(int id) {
            base.Channel.DeleteSession(id);
        }
        
        public OCC.UI.Webhost.CodeCampService.Speaker[] GetSpeakers(int eventId) {
            return base.Channel.GetSpeakers(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Speaker GetSpeaker(int eventId, int speakerId) {
            return base.Channel.GetSpeaker(eventId, speakerId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Person[] GetTaskAssignees(int taskId) {
            return base.Channel.GetTaskAssignees(taskId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Task[] GetAllCurrentEventTasks(int eventId) {
            return base.Channel.GetAllCurrentEventTasks(eventId);
        }
        
        public void AssignTaskToPerson(OCC.UI.Webhost.CodeCampService.Task task) {
            base.Channel.AssignTaskToPerson(task);
        }
        
        public void RemoveTaskFromPerson(OCC.UI.Webhost.CodeCampService.Task task) {
            base.Channel.RemoveTaskFromPerson(task);
        }
        
        public OCC.UI.Webhost.CodeCampService.Task GetTaskById(int taskId) {
            return base.Channel.GetTaskById(taskId);
        }
        
        public void AddTaskToEvent(OCC.UI.Webhost.CodeCampService.Task newTask) {
            base.Channel.AddTaskToEvent(newTask);
        }
        
        public void DisableTask(int existingTaskId) {
            base.Channel.DisableTask(existingTaskId);
        }
        
        public void UpdateTask(OCC.UI.Webhost.CodeCampService.Task existingTask) {
            base.Channel.UpdateTask(existingTask);
        }
        
        public string GetEventAttendee(int eventId, int personId) {
            return base.Channel.GetEventAttendee(eventId, personId);
        }
        
        public void Rsvp(int eventId, int personId, string rsvp1) {
            base.Channel.Rsvp(eventId, personId, rsvp1);
        }
        
        public void Schedule(int sessionId, int trackId, int timeslotId) {
            base.Channel.Schedule(sessionId, trackId, timeslotId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Track[] GetAgenda(int eventId) {
            return base.Channel.GetAgenda(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Session[] GetMyAgenda(int eventId, int personId) {
            return base.Channel.GetMyAgenda(eventId, personId);
        }
        
        public void RateSession(OCC.UI.Webhost.CodeCampService.SessionAttendee s) {
            base.Channel.RateSession(s);
        }
        
        public OCC.UI.Webhost.CodeCampService.SessionAttendee[] GetAttendedSessions(int eventId, int personId) {
            return base.Channel.GetAttendedSessions(eventId, personId);
        }
        
        public void AttendSession(int personId, int sessionId) {
            base.Channel.AttendSession(personId, sessionId);
        }
        
        public int GetTracksCount(int eventId) {
            return base.Channel.GetTracksCount(eventId);
        }
        
        public int GetSessionsCount(int eventId) {
            return base.Channel.GetSessionsCount(eventId);
        }
        
        public int GetSpeakersCount(int eventId) {
            return base.Channel.GetSpeakersCount(eventId);
        }
        
        public int GetAttendeesCount(int eventId) {
            return base.Channel.GetAttendeesCount(eventId);
        }
        
        public OCC.UI.Webhost.CodeCampService.Tag[] GetTags() {
            return base.Channel.GetTags();
        }
        
        public void AddTag(OCC.UI.Webhost.CodeCampService.Tag tag) {
            base.Channel.AddTag(tag);
        }
        
        public System.Tuple<bool, string> DeleteTag(int tagId) {
            return base.Channel.DeleteTag(tagId);
        }
        
        public void EditTag(OCC.UI.Webhost.CodeCampService.Tag tag) {
            base.Channel.EditTag(tag);
        }
        
        public string GetValueForKey(string key) {
            return base.Channel.GetValueForKey(key);
        }
    }
}
